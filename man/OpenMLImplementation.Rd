\name{OpenMLImplementation}
\alias{OpenMLImplementation}
\alias{OpenMLImplementation-class}
\title{OpenMLImplementation}
\description{
  This class of objects contains the information describing
  an openML implementation.
}
\details{
  Objects can be created by calls of the form
  \code{OpenMLImplementation(...)}. The objects contain
  information on ... .
}
\section{Slots}{
  \describe{ \item{\code{id}}{[\code{character}]\cr ID of
  the implementation. Generated by the server, based on
  name and version of the implementation.  Ignored when
  uploaded manually.}
  \item{\code{uploader}}{[\code{integer}]\cr The user that
  uploaded the implementation. Added by the server. Ignored
  when uploaded manually.}
  \item{\code{name}}{[\code{character}]\cr The name of the
  implementation. Name-version combinations should be
  unique.\cr Allowed characters: () [] a-z A-Z 0-9 . _ - +}
  \item{\code{version}}{[\code{character}]\cr The version
  of the implementation.\cr Allowed characters: () [] a-z
  A-Z 0-9 . _ - +}
  \item{\code{description}}{[\code{character}]\cr A user
  description of the implementation.}
  \item{\code{creator}}{[\code{character}]\cr Optional. The
  persons/institutions that created the implementation.}
  \item{\code{contributor}}{[\code{character}]\cr Optional.
  (Minor) contributors to the workflow}
  \item{\code{upload.date}}{[\code{character}]\cr The date
  on which the implementation was uploaded.\cr Format
  YYYY-mm-ddThh:MM:SS.  Added by the server. Ignored when
  uploaded manually.}
  \item{\code{licence}}{[\code{character}]\cr Optional.
  Default is none, meaning Public Domain or "don't
  know/care".} \item{\code{language}}{[\code{character}]\cr
  Optional. Starts with one upper case letter, rest is
  lower case. Default is English.}
  \item{\code{full.description}}{[\code{character}]\cr
  Optional. Full description of the workflow, e.g, man
  pages filled in by tool.  This is a much more elaborate
  description than given in the 'description field'. It may
  include information about all components of the
  workflow.}
  \item{\code{installation.notes}}{[\code{character}]\cr
  Installation notes.}
  \item{\code{dependencies}}{[\code{character}]\cr The
  dependencies of the implementation.}
  \item{\code{bibliographical.reference}}{[\code{list}]\cr
  An optional list containing information on
  bibliographical references in form of
  \code{\link{OpenMLBibRef}s}.}
  %\item{\code{implements}}{[\code{character}]\cr
  %Ontological reference.}
  \item{\code{parameter}}{[\code{list}]\cr The parameters
  of the implementation. A list containing
  \code{\link{OpenMLImplementationParameter}s}.}
  \item{\code{components}}{[\code{list}]}\cr A list
  contatining \code{\link{OpenMLImplementation}s}.
  Typically components of a workflow or subfunctions of an
  algorithm (e.g. kernels). Components can have their own
  parameters.
  \item{\code{source.url}}{[\code{character}]\cr URL from
  which the source code can be downloaded. Added by the
  server. Ignored when uploaded manually.}
  \item{\code{binary.url}}{[\code{character}]\cr URL from
  which the binary can be downloaded. Added by the server.
  Ignored when uploaded manually.}
  \item{\code{source.format}}{[\code{character}]\cr Format
  of the source file.}
  \item{\code{binary.format}}{[\code{character}]\cr Format
  of the binary file.}
  \item{\code{source.md5}}{[\code{character}]\cr MD5
  checksum to check if the source code was uploaded
  correctly.}
  \item{\code{binary.md5}}{[\code{character}]\cr MD5
  checksum to check if the binary code was uploaded
  correctly.} }
}

