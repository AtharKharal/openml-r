% Generated by roxygen2 (4.0.1): do not edit by hand
\name{makeOpenMLImplementation}
\alias{OpenMLImplementation}
\alias{makeOpenMLImplementation}
\title{Construct OpenMLImplementation.}
\usage{
makeOpenMLImplementation(id = NA_integer_, uploader = NA_integer_, name,
  version = NA_character_, external.version = NA_character_, description,
  creator = NA_character_, contributor = NA_character_,
  upload.date = NA_character_, licence = NA_character_,
  language = "English", full.description = NA_character_,
  installation.notes = NA_character_, dependencies = NA_character_,
  bibliographical.reference = NULL, parameter = NULL, components = NULL,
  source.url = NA_character_, binary.url = NA_character_,
  source.format = NA_character_, binary.format = NA_character_,
  source.md5 = NA_character_, binary.md5 = NA_character_)
}
\arguments{
\item{id}{[\code{integer(1)}]\cr
ID of the implementation. Generated by the server, based on name and version of the implementation.
Ignored when uploaded manually.}

\item{uploader}{[\code{integer(1)}]\cr
The user that uploaded the implementation. Added by the server. Ignored when uploaded manually.}

\item{name}{[\code{character(1)}]\cr
The name of the implementation. Name-version combinations should be unique.\cr
Allowed characters: () [] a-z A-Z 0-9 . _ - +}

\item{version}{[\code{character(1)}]\cr
The version of the implementation. Default is 1.0. Ignored at upload time.}

\item{external.version}{[\code{character(1)}]\cr
An external version, defined by the user. In combination with the name, it must be unique.}

\item{description}{[\code{character(1)}]\cr
A user description of the implementation.}

\item{creator}{[\code{character}]\cr
Optional. The persons/institutions that created the implementation.}

\item{contributor}{[\code{character}]\cr
Optional. (Minor) contributors to the workflow}

\item{upload.date}{[\code{character(1)}]\cr
The date on which the implementation was uploaded.\cr
Format YYYY-mm-ddThh:MM:SS.
Added by the server. Ignored when uploaded manually.}

\item{licence}{[\code{character(1)}]\cr
Optional. Default is none, meaning Public Domain or "don't know/care".}

\item{language}{[\code{character(1)}]\cr
Optional. Starts with one upper case letter, rest is lower case. Default is English.}

\item{full.description}{[\code{character(1)}]\cr
Optional. Full description of the workflow, e.g, man pages filled in by tool.
This is a much more elaborate description than given in the 'description field'. It may include
information about all components of the workflow.}

\item{installation.notes}{[\code{character(1)}]\cr
Optional. Additional hints on how to run the implementation.}

\item{dependencies}{[\code{character(1)}]\cr
Optional. The dependencies of the implementation.}

\item{bibliographical.reference}{[\code{list}]\cr
 An optional list containing information on bibliographical references in form of
 \code{\link{OpenMLBibRef}s}.
#}

\item{implements}{[\code{character}]\cr
#   Ontological reference.}

\item{parameter}{[\code{list}]\cr
The parameters of the implementation. A list containing
\code{\link{OpenMLImplementationParameter}s}.}

\item{components}{[\code{list}]\cr
A list containing \code{\link{OpenMLImplementation}s}. Typically components of a workflow or
subfunctions of an algorithm (e.g. kernels). Components can have their own parameters.}

\item{source.url}{[\code{character(1)}]\cr
URL from which the source code can be downloaded. Added by the server. Ignored when uploaded manually.}

\item{binary.url}{[\code{character(1)}]\cr
URL from which the binary can be downloaded. Added by the server. Ignored when uploaded manually.}

\item{source.format}{[\code{character(1)}]\cr
Format of the source file.}

\item{binary.format}{[\code{character(1)}]\cr
Format of the binary file.}

\item{source.md5}{[\code{character(1)}]\cr
MD5 checksum to check if the source code was uploaded correctly.}

\item{binary.md5}{[\code{character(1)}]\cr
MD5 checksum to check if the binary code was uploaded correctly.}
}
\description{
Construct OpenMLImplementation.
}

